{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction AddDataComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Form is invalid \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AddDataComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    // Initialize the form using FormBuilder (use Validators if necessary)\n    this.myForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      age: ['', Validators.required],\n      salary: ['', Validators.required],\n      department: ['', Validators.required] // A form control for 'department' with validation\n    });\n  }\n  // Submit method\n  onSubmit() {\n    if (this.myForm.valid) {\n      // <-- Check if the form is valid before submission\n      console.log(this.myForm.value); // This logs the form's value\n    } else {\n      console.log('Form is invalid');\n      console.log(this.myForm);\n    }\n  }\n  static {\n    this.ɵfac = function AddDataComponent_Factory(t) {\n      return new (t || AddDataComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddDataComponent,\n      selectors: [[\"app-add-data\"]],\n      decls: 27,\n      vars: 2,\n      consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"name\", \"name\", 1, \"form-control\"], [\"for\", \"age\"], [\"type\", \"text\", \"name\", \"age\", 1, \"form-control\"], [\"for\", \"salery\"], [\"type\", \"text\", \"name\", \"salery\", 1, \"form-control\"], [\"for\", \"department\"], [\"type\", \"text\", \"name\", \"department\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [4, \"ngIf\"]],\n      template: function AddDataComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n          i0.ɵɵtext(2, \"Add Data\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function AddDataComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n          i0.ɵɵtext(6, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"pre\");\n          i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\", 5);\n          i0.ɵɵtext(11, \"Age\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"input\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"pre\");\n          i0.ɵɵelementStart(14, \"div\", 2)(15, \"label\", 7);\n          i0.ɵɵtext(16, \"Salery\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"input\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(18, \"pre\");\n          i0.ɵɵelementStart(19, \"div\", 2)(20, \"label\", 9);\n          i0.ɵɵtext(21, \"Department\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(22, \"input\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(23, \"pre\");\n          i0.ɵɵelementStart(24, \"button\", 11);\n          i0.ɵɵtext(25, \"Submit\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(26, AddDataComponent_div_26_Template, 2, 0, \"div\", 12);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n          i0.ɵɵadvance(23);\n          i0.ɵɵproperty(\"ngIf\", ctx.myForm.invalid);\n        }\n      },\n      dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective],\n      styles: [\"div[_ngcontent-%COMP%]{\\r\\n    text-align: center;\\r\\n}\\r\\nlabel[_ngcontent-%COMP%]{\\r\\n    text-align: left;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRkLWRhdGEvYWRkLWRhdGEuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksZ0JBQWdCO0FBQ3BCIiwic291cmNlc0NvbnRlbnQiOlsiZGl2e1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbmxhYmVse1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAA8CA,UAAU,QAAQ,gBAAgB;;;;;;ICyB5EC,2BAA4B;IACxBA,iCACJ;IAAAA,iBAAM;;;ADpBV,OAAM,MAAOC,gBAAgB;EAiC3BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAC7B;IACA,IAAI,CAACC,MAAM,GAAG,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MACnCC,IAAI,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MAC/BC,GAAG,EAAE,CAAC,EAAE,EAAET,UAAU,CAACQ,QAAQ,CAAC;MAC9BE,MAAM,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACQ,QAAQ,CAAC;MACjCG,UAAU,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACQ,QAAQ,CAAC,CAAI;KAC1C,CAAC;EACJ;EAEA;EACAI,QAAQ;IACN,IAAI,IAAI,CAACP,MAAM,CAACQ,KAAK,EAAE;MAAG;MACxBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,MAAM,CAACW,KAAK,CAAC,CAAC,CAAE;KAClC,MAAM;MACLF,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC9BD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,MAAM,CAAC;;EAE5B;;;uBAnDWH,gBAAgB;IAAA;EAAA;;;YAAhBA,gBAAgB;MAAAe;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCR7BpB,8BAAuB;UACfA,wBAAQ;UAAAA,iBAAK;UACjBA,+BAAmD;UAAxBA;YAAA,OAAYqB,cAAU;UAAA,EAAC;UAC9CrB,8BAAwB;UACFA,oBAAI;UAAAA,iBAAQ;UAC9BA,2BAAoD;UACxDA,iBAAM;UACNA,sBAAW;UACXA,8BAAwB;UACHA,oBAAG;UAAAA,iBAAQ;UAC5BA,4BAAmD;UACvDA,iBAAM;UACNA,uBAAW;UACXA,+BAAwB;UACAA,uBAAM;UAAAA,iBAAQ;UAClCA,4BAAsD;UAC1DA,iBAAM;UACNA,uBAAW;UACXA,+BAAwB;UACIA,2BAAU;UAAAA,iBAAQ;UAC1CA,6BAA0D;UAC9DA,iBAAM;UACNA,uBAAW;UACXA,mCAA+C;UAAAA,uBAAM;UAAAA,iBAAS;UAGlEA,oEAEM;UACVA,iBAAM;;;UA3BIA,eAAoB;UAApBA,sCAAoB;UAwBpBA,gBAAoB;UAApBA,yCAAoB","names":["Validators","i0","AddDataComponent","constructor","formBuilder","myForm","group","name","required","age","salary","department","onSubmit","valid","console","log","value","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\MB20\\check\\src\\app\\add-data\\add-data.component.ts","C:\\Users\\MB20\\check\\src\\app\\add-data\\add-data.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-data',\n  templateUrl: './add-data.component.html',\n  styleUrls: ['./add-data.component.css']\n})\nexport class AddDataComponent {\n\n  // myForm: FormGroup= new FormGroup({});\n\n  // constructor(private formBuilder : FormBuilder){\n  //   this.myForm=this.formBuilder.group({\n  //     name: new FormControl(''),\n  //     age:new FormControl(''),\n  //     salary:new FormControl(''),\n  //     department:new FormControl('')\n  //   })\n  // }\n  \n  // ngOnInit(): void {\n  //   // this.myForm=this.formBuilder.group({\n  //   //   name: ['aasim'],\n  //   //   age:[''],\n  //   //   salary:[''],\n  //   //   department:['']\n  //   // })\n  // }\n  \n  // onSubmit(){\n  //   if(true){\n  //     console.log(this.myForm.value);\n  //   }\n  //   else{\n  //     console.log(\"from is invalid\")\n  //   }\n  // }\n\n  myForm: FormGroup;  // <-- Declare the form group\n\n  constructor(private formBuilder: FormBuilder) { \n    // Initialize the form using FormBuilder (use Validators if necessary)\n    this.myForm = this.formBuilder.group({\n      name: ['', Validators.required],         // A form control for 'name' with validation\n      age: ['', Validators.required],          // A form control for 'age' with validation\n      salary: ['', Validators.required],       // A form control for 'salary' with validation\n      department: ['', Validators.required]    // A form control for 'department' with validation\n    });\n  }\n\n  // Submit method\n  onSubmit() {\n    if (this.myForm.valid) {  // <-- Check if the form is valid before submission\n      console.log(this.myForm.value);  // This logs the form's value\n    } else {\n      console.log('Form is invalid');\n      console.log(this.myForm);\n    }\n  }\n  \n}\n","<div class=\"container\">\n    <h1>Add Data</h1>\n    <form [formGroup]=\"myForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n            <label for=\"name\">Name</label>\n            <input type=\"text\" name=\"name\" class=\"form-control\">\n        </div>\n        <pre></pre>\n        <div class=\"form-group\">\n            <label for=\"age\">Age</label>\n            <input type=\"text\" name=\"age\" class=\"form-control\">\n        </div>\n        <pre></pre>\n        <div class=\"form-group\">\n            <label for=\"salery\">Salery</label>\n            <input type=\"text\" name=\"salery\" class=\"form-control\">\n        </div>\n        <pre></pre>\n        <div class=\"form-group\">\n            <label for=\"department\">Department</label>\n            <input type=\"text\" name=\"department\" class=\"form-control\">\n        </div>\n        <pre></pre>\n        <button class=\"btn btn-primary\" type=\"submit\" >Submit</button>\n    </form>\n\n    <div *ngIf=\"myForm.invalid\">\n        Form is invalid\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}